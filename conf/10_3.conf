###
#all the rnodes are up
###
#user  nobody;
worker_processes  1;

error_log  logs/error.log debug;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    upstream backend_servers {
      consistent_hash    $request_uri;
      server  127.0.0.1:8100 max_fails=10;
      server  127.0.0.1:8101 max_fails=10;
      server  127.0.0.1:8102 max_fails=10;
      server  127.0.0.1:8103 max_fails=10;
      server  127.0.0.1:8104 max_fails=10;
      server  127.0.0.1:8105 max_fails=10;
      server  127.0.0.1:8106 max_fails=10;
      server  127.0.0.1:8107 max_fails=10;
      server  127.0.0.1:8108 max_fails=10;
      server  127.0.0.1:8109 max_fails=10;
    }
    
    server {
      listen  8100;
    
      location / {
        echo "127.0.0.1:8100";
        echo "";
      }
    }
    server {
      listen  8101;
    
      location / {
        echo "127.0.0.1:8101";
        echo "";
      }
    }
    server {
      listen  8102;
    
      location / {
        echo "127.0.0.1:8102";
        echo "";
      }
    }
    server {
      listen  8103;
    
      location / {
        echo "127.0.0.1:8103";
        echo "";
      }
    }
    server {
      listen  8104;
    
      location / {
        echo "127.0.0.1:8104";
        echo "";
      }
    }
    server {
      listen  8105;
    
      location / {
        echo "127.0.0.1:8105";
        echo "";
      }
    }
    server {
      listen  8106;
    
      location / {
        echo "127.0.0.1:8106";
        echo "";
      }
    }
#    server {
#      listen  8107;
#    
#      location / {
#        echo "127.0.0.1:8107";
#        echo "";
#      }
#    }
#    server {
#      listen  8108;
#    
#      location / {
#        echo "127.0.0.1:8108";
#        echo "";
#      }
#    }
#    server {
#      listen  8109;
#    
#      location / {
#        echo "127.0.0.1:8109";
#        echo "";
#      }
#    }

    server {
        listen       8000;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            proxy_pass http://backend_servers ;
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
